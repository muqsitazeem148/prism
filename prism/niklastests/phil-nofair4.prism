// randomized dining philosophers [LR81]
// dxp/gxn 23/01/02

// model which does not require fairness
// remove the possibility of loops:
// (1) cannot stay in thinking 
// (2) if first fork not free then cannot move (another philosopher must more)

mdp

// atomic formulae 
// left fork free and right fork free resp.
formula lfree = (p2>=0&p2<=4)|p2=6|p2=10;
formula rfree = (p4>=0&p4<=3)|p4=5|p4=7|p4=11;

module phil1

	p1: [0..11];

	[] p1=0 -> (p1'=1); // trying
	[] p1=1 -> 0.5 : (p1'=2) + 0.5 : (p1'=3); // draw randomly
	[] p1=2 &  lfree -> (p1'=4); // pick up left
	[] p1=3 &  rfree -> (p1'=5); // pick up right
	[b1] p1=4 &  rfree -> (p1'=8); // pick up right (got left)
	[] p1=4 & !rfree -> (p1'=6); // right not free (got left)
	[b1] p1=5 &  lfree -> (p1'=8); // pick up left (got right)
	[] p1=5 & !lfree -> (p1'=7); // left not free (got right)
	[] p1=6  -> (p1'=1); // put down left
	[] p1=7  -> (p1'=1); // put down right
	[b1] p1=8  -> (p1'=9); // move to eating (got forks)
	[] p1=9  -> (p1'=10); // finished eating and put down left 
	[] p1=9  -> (p1'=11); // finished eating and put down right
	[a1] p1=10 -> (p1'=0); // put down right and return to think
	[a1] p1=11 -> (p1'=0); // put down left and return to think

endmodule

// construct further modules through renaming
module phil2 = phil1 [ p1=p2, p2=p3, p4=p1 , b1 = b2 , a1 = a2 ] endmodule
module phil3 = phil1 [ p1=p3, p2=p4, p4=p2  ,b1 = b3 , a1 = a3] endmodule
module phil4 = phil1 [ p1=p4, p2=p1, p4=p3  ,b1 = b4 , a1 = a4] endmodule


// rewards (number of steps)
rewards "num_steps"
	[] true : 1;
endrewards
// labels
label "hungry" = ((p1>0)&(p1<8))|((p2>0)&(p2<8))|((p3>0)&(p3<8))|((p4>0)&(p4<8));
label "eat" = ((p1>=8)&(p1<=9))|((p2>=8)&(p2<=9))|((p3>=8)&(p3<=9))|((p4>=8)&(p4<=9));


rewards "think"
 [a1] true : 1;
 [a2] true : 1;
 [a3] true : 1;
 [a4] true : 1;
endrewards

rewards "eat"
[b2] true : 1;
[b1] true : 1;
[b3] true : 1;
[b4] true : 1;
endrewards


rewards "eat1"
 ((p1>=8)&(p1<=9)) : 1;
endrewards

rewards "eat2"
 ((p2>=8)&(p2<=9)) : 1;
endrewards

rewards "eat3"
 ((p3>=8)&(p3<=9)) : 1;
endrewards

